load("~/Desktop/Bitirme/INDR 491/2.RData")
inpatientDataNoExit<-NULL
k<-NULL
antibioticRefData<-NULL
kk<-NULL
antibiotic<-NULL
antibioticData<-NULL
save.image("~/3.RData")
inpatient<-inpatientData[, c(3,4,5,6,7)]
View(inpatient)
inpatient<-merge(inpatient, antibiotic_combined, by="EID", all.x = TRUE)
View(inpatient)
save.image("~/4.RData")
chunk_size <- 1000
for (partition in 1:ceiling(nrow(inpatient) / chunk_size)) {
print(sprintf("processing chunk #%d out of %d", partition, ceiling(nrow(inpatient) / chunk_size)))
start_index <- (partition - 1) * chunk_size + 1
end_index <- min(partition * chunk_size, nrow(inpatient))
lines <- rep("", 2 * (end_index - start_index + 1))
line_index <- 0
for (i in start_index:end_index){
lines[line_index + 1] <- sprintf('{"index": {"_index": "americanhospital", "_type": "Inpatient", "_id": "%s"}}', tolower(rownames(inpatient)[i]))
lines[line_index + 2] <- sprintf('{"Admission": %d , "PatientID": %d,  "Gender": "%s", "AdmissionDate": "%s", "ReleaseDate" : "%s",  "DrugCount": %d,"Drugs": [%s]}',
inpatient[i, "EID"],
inpatient[i, "PID"],
inpatient[i, "GENDER"],
inpatient[i, "YATISTARIHI"],
inpatient[i, "TTARIHI"],
inpatient[i, "DrugCount"],
inpatient[i, "Drugs"])
line_index <- line_index + 2
}
writeLines(text = lines, con = "chunk_full.json")
docs <- docs_bulk("chunk_full.json", chunk_size = chunk_size)
}
chunk_size <- 1000
for (partition in 1:ceiling(nrow(inpatient) / chunk_size)) {
print(sprintf("processing chunk #%d out of %d", partition, ceiling(nrow(inpatient) / chunk_size)))
start_index <- (partition - 1) * chunk_size + 1
end_index <- min(partition * chunk_size, nrow(inpatient))
lines <- rep("", 2 * (end_index - start_index + 1))
line_index <- 0
for (i in start_index:end_index){
lines[line_index + 1] <- sprintf('{"index": {"_index": "americanhospital", "_type": "Inpatient", "_id": "%s"}}', tolower(rownames(inpatient)[i]))
lines[line_index + 2] <- sprintf('{"Admission": %d , "PatientID": %d,  "Gender": "%s", "AdmissionDate": "%s", "ReleaseDate" : "%s",  "DrugCount": %d,"Drugs": [%s]}',
inpatient[i, "EID"],
inpatient[i, "PID"],
inpatient[i, "GENDER"],
inpatient[i, "YTARIHI"],
inpatient[i, "TTARIHI"],
inpatient[i, "DrugCount"],
inpatient[i, "Drugs"])
line_index <- line_index + 2
}
writeLines(text = lines, con = "chunk_full.json")
docs <- docs_bulk("chunk_full.json", chunk_size = chunk_size)
}
library(data.table)
library(elastic)
library(lubridate)
library(stringi)
library(readstata13)
library(magrittr)
load("~/Desktop/Bitirme/INDR 491/2.RData")
inpatientDataNoExit<-NULL
k<-NULL
kk<-NULL
antibiotic<-NULL
antibioticData<-NULL
inpatient<-inpatientData[, c(3,4,5,6,7)]
save.image("~/Desktop/Bitirme/INDR 491/3.RData")
inpatient<-merge(inpatient, antibiotic_combined, by="EID", all.x = TRUE)
save.image("~/Desktop/Bitirme/INDR 491/4.RData")
library(data.table)
library(elastic)
library(lubridate)
library(stringi)
library(readstata13)
library(magrittr)
connect()
chunk_size <- 1000
for (partition in 1:ceiling(nrow(inpatient) / chunk_size)) {
print(sprintf("processing chunk #%d out of %d", partition, ceiling(nrow(inpatient) / chunk_size)))
start_index <- (partition - 1) * chunk_size + 1
end_index <- min(partition * chunk_size, nrow(inpatient))
lines <- rep("", 2 * (end_index - start_index + 1))
line_index <- 0
for (i in start_index:end_index){
lines[line_index + 1] <- sprintf('{"index": {"_index": "americanhospital", "_type": "Inpatient", "_id": "%s"}}', tolower(rownames(inpatient)[i]))
lines[line_index + 2] <- sprintf('{"Admission": %d , "PatientID": %d,  "Gender": "%s", "AdmissionDate": "%s", "ReleaseDate" : "%s",  "DrugCount": %d,"Drugs": [%s]}',
inpatient[i, "EID"],
inpatient[i, "PID"],
inpatient[i, "GENDER"],
inpatient[i, "YTARIHI"],
inpatient[i, "TTARIHI"],
inpatient[i, "DrugCount"],
inpatient[i, "Drugs"])
line_index <- line_index + 2
}
writeLines(text = lines, con = "chunk_full.json")
docs <- docs_bulk("chunk_full.json", chunk_size = chunk_size)
}
Search(index = "americanhospital",type = "Inpatient", body = '{"_source": ["GENDER"]}', size = 1)
save.image("~/Desktop/Bitirme/INDR 491/5.RData")
View(antibiotic_Index)
View(ingredient_Index)
View(antibiotic_Index)
View(inpatientData)
View(inpatient)
help(runif)
